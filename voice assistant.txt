import pyttsx3
import datetime
import speech_recognition as sr
import pyaudio
import wikipedia
import webbrowser
import os
import random
import smtplib
from requests import get
import pywhatkit
import sys
import pyjokes




engine=pyttsx3.init('sapi5')
voices=engine.getProperty('voices')
print(voices[1].id)
engine.setProperty('voice',voices[0].id)





def speak(audio):
    engine.say(audio)
    engine.runAndWait()

def wishme():
    hour=int(datetime.datetime.now().hour)
    if hour==0 and hour<=12:
        speak("Good morning")
    
    elif hour==12 and hour<18:
        speak("Good Afternoon sir")
    
    else:
        speak("good evening sir")
    
    speak("I am spike Sir,tell me how can i help you")

def sendEmail(to, content):
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.ehlo()
    server.starttls()
    server.login('himanshuhoney883@gmail.com', 'Himanshu@123')
    server.sendmail('himanshuhoney883@gmail.com', to, content)
    server.close()

def takeCommand():
    #It takes microphone input from the user and returns string output

    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        r.pause_threshold = 0.8
        audio = r.listen(source)
        
    try:
        print("Recognizing...")    
        query = r.recognize_google(audio, language='en-in') #Using google for voice recognition.
        print(f"User said: {query}\n") 
    
    except Exception as e:
        print(e)
        print("say that again please....")
        return None
    return query

if __name__ == "__main__":
    wishme()
    while True:
    # if 1:
        query = takeCommand().lower() #Converting user query into lower case

        # Logic for executing tasks based on query
        if 'wikipedia' in query:  #if wikipedia found in the query then this block will be executed
            speak('Searching Wikipedia...')
            query = query.replace("wikipedia", "")
            results = wikipedia.summary(query, sentences=2) 
             #it means two sentence of result will be printed
            speak("According to Wikipedia")
            print(results)
            speak(results)
        
        elif 'open youtube' in query:
            webbrowser.open("youtube.com")
        
        elif 'open yahoo' in query:
            webbrowser.open("yahoo.com")
        
        elif 'open gaana' in query:
            webbrowser.open("gaana.com")
        
        elif 'google' in query:
            speak("sir, what should i search on google")
            cm= takeCommand().lower()
            webbrowser.open(f"{cm}")

        elif 'play music' in query:
            music_dir='F:\\songs'
            songs=os.listdir(music_dir)
            rd = random.choice(songs)
            os.startfile(os.path.join(music_dir,rd))
        
        elif 'open command prompt' in query:
            os.system('start cmd')
        
        elif 'the time' in query:
            strTime = datetime.datetime.now().strftime("%H:%M:%S")    
            #strftime is the format 
            speak(f"Sir, the time is {strTime}")
        
        elif 'open chrome' in query:
             codePath ="C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"
             os.startfile(codePath)
        

      # for closing an application  
        elif 'close chrome' in query:
            speak("closing chrome")
            os.system("taskkill /f /im chrome.exe ")
        
        elif 'open vs ' in query:
            codePath="D:\\Microsoft VS Code\\Code.exe"
            os.startfile(codePath)
        
        elif 'ip address' in query:
            ip= get('https://api.ipify.org').text
            speak(f"your ip address is {ip}")
        
        elif 'send message' in query:
            pywhatkit.sendwhatmsg("+918569857383","hyy",19,19)
        
        elif 'play song on youtube' in query:
            pywhatkit.playonyt("justin bieber baby")
        
        elif 'tell me a joke' in query:
            joke = pyjokes.get_joke()
            speak(joke)
        
        elif 'sleep the system' in query:
            os.system("rund1132.exe powrprof.dll,SetSuspendState 0,1,0")
        
        



    

        
        elif 'email to himanshu' in query:
            try:
                speak("What should I say?")
                content = takeCommand()
                to = "starhimanshu5@gmail.com"    
                sendEmail(to, content)
                speak("Email has been sent!")
            except Exception as e:
                print(e)
                speak("Sorry my friend himanshu. I am not able to send this email") 
            
        elif 'no thanks' in query:
            speak("Thanks for using it Having a great day ahead")
            sys.exit()

        speak('sir,anything else')
            


# wishme()
if __name__=="__main__" :
    takeCommand()
